//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model City {
  id           Int        @id @default(autoincrement())
  name         String
  prefectureId Int
  prefecture   Prefecture @relation(fields: [prefectureId], references: [id])
  members      Member[]
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz
  updatedAt    DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("m_cities")
}


model Color {
  id        Int      @id @default(autoincrement())
  name      String
  colorCode String   @unique @map("color_code")
  kanaName  String   @map("kana_name")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("m_colors")
}


model FontFamily {
  id        Int      @id @default(autoincrement())
  name      String
  style     String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("m_font_families")
}


model FootPart {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("m_foot_parts")
}


model HeadPart {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("m_head_parts")
}


model Member {
  id                Int         @id @default(autoincrement())
  name              String
  email             String      @unique
  password          String
  rememberToken     String?     @map("remember_token")
  rememberExpiresAt DateTime?   @map("remember_expires_at") @db.Timestamptz
  confirmToken      String?     @map("confirm_token")
  confirmExpiresAt  DateTime?   @map("confirm_expires_at") @db.Timestamptz
  confirmStatus     String      @map("confirm_status") @db.Char(2)
  image             String?
  prefectureId      Int?
  prefecture        Prefecture? @relation(fields: [prefectureId], references: [id])
  cityId            Int?
  city              City?       @relation(fields: [cityId], references: [id])
  createdAt         DateTime    @default(now()) @map("created_at") @db.Timestamptz
  updatedAt         DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("members")
}


//******** nextauth.prisma start *********

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  createdAt          DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt          DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("nextauth_accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime @db.Timestamptz
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("nextauth_sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @db.Timestamptz
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("nextauth_users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime @db.Timestamptz
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@unique([identifier, token])
  @@map("nextauth_verificationtokens")
}

//******** nextauth.prisma end *********


model Prefecture {
  id        Int      @id @default(autoincrement())
  name      String
  cities    City[]
  members   Member[]
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@map("m_prefectures")
}



